{"version":3,"sources":["../../src/components/Preview.js"],"names":["MuxVideoPreview","props","React","useState","undefined","secrets","setSecrets","posterSrc","setPosterSrc","useEffect","then","data","value","status","signingKeyId","signingKeyPrivate","playbackId","playbackIds","id","time","thumbTime","fitMode","width","height","isSigned","policy","styles","poster","backgroundImage","filename","propTypes","PropTypes","object","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAIC,KAAD,IAAW;AACjC,wBAA8BC,eAAMC,QAAN,CAAeC,SAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAAkCJ,eAAMC,QAAN,CAAeC,SAAf,CAAlC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AAEAN,iBAAMO,SAAN,CAAgB,MAAM;AACpB,iCAAeC,IAAf,CAAqBC,IAAD,IAAUL,UAAU,CAACK,IAAI,CAACN,OAAN,CAAxC;AACD,GAFD,EAEG,EAFH;;AAIAH,iBAAMO,SAAN,CAAgB,MAAM;AACpB,QAAIR,KAAK,CAACW,KAAN,KAAgB,IAAhB,IAAwBP,OAAO,KAAKD,SAAxC,EAAmD;AAEnD,QAAIH,KAAK,CAACW,KAAN,CAAYC,MAAZ,KAAuB,OAA3B,EAAoC;AAEpC,QAAOC,YAAP,GAA0CT,OAA1C,CAAOS,YAAP;AAAA,QAAqBC,iBAArB,GAA0CV,OAA1C,CAAqBU,iBAArB;AACA,QAAMC,UAAU,GAAGf,KAAK,CAACW,KAAN,CAAYK,WAAZ,CAAwB,CAAxB,CAAnB;AAEAT,IAAAA,YAAY,CACV,2BAAaQ,UAAU,CAACE,EAAxB,EAA4B;AAC1BC,MAAAA,IAAI,EAAElB,KAAK,CAACW,KAAN,CAAYQ,SADQ;AAE1BC,MAAAA,OAAO,EAAE,MAFiB;AAG1BC,MAAAA,KAAK,EAAE,GAHmB;AAI1BC,MAAAA,MAAM,EAAE,GAJkB;AAK1BC,MAAAA,QAAQ,EAAER,UAAU,CAACS,MAAX,KAAsB,QALN;AAM1BX,MAAAA,YAN0B;AAO1BC,MAAAA;AAP0B,KAA5B,CADU,CAAZ;AAWD,GAnBD,EAmBG,CAACd,KAAK,CAACW,KAAP,EAAcP,OAAd,CAnBH;;AAqBA,MAAI,CAACJ,KAAK,CAACW,KAAX,EAAkB,OAAO,IAAP;;AAElB,MAAIL,SAAS,KAAKH,SAAlB,EAA6B;AAC3B,wBAAO;AAAK,MAAA,SAAS,EAAEsB,iBAAOC,MAAvB;AAA+B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,gBAASrB,SAAT;AAAhB;AAAtC,MAAP;AACD;;AAED,qBAAuCN,KAAK,CAACW,KAA7C;AAAA,MAAOiB,QAAP,gBAAOA,QAAP;AAAA,MAAiBb,UAAjB,gBAAiBA,UAAjB;AAAA,MAA6BH,MAA7B,gBAA6BA,MAA7B;AAEA,sBACE,6BAAC,6BAAD;AACE,IAAA,KAAK,EAAEgB,QAAQ,IAAIb,UAAZ,IAA0B,EADnC;AAEE,IAAA,QAAQ,EAAEH,MAAM,qBAAcA,MAAd,IAAyB;AAF3C,IADF;AAMD,CA3CD;;AA6CAb,eAAe,CAAC8B,SAAhB,GAA4B;AAC1BlB,EAAAA,KAAK,EAAEmB,mBAAUC;AADS,CAA5B;AAIAhC,eAAe,CAACiC,YAAhB,GAA+B;AAC7BrB,EAAAA,KAAK,EAAE;AADsB,CAA/B;eAIeZ,e","sourcesContent":["import {SanityDefaultPreview} from 'part:@sanity/base/preview'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport {fetchSecrets} from '../actions/secrets'\r\nimport getPosterSrc from '../util/getPosterSrc'\r\nimport styles from './Preview.css'\r\n\r\nconst MuxVideoPreview = (props) => {\r\n  const [secrets, setSecrets] = React.useState(undefined)\r\n  const [posterSrc, setPosterSrc] = React.useState(undefined)\r\n\r\n  React.useEffect(() => {\r\n    fetchSecrets().then((data) => setSecrets(data.secrets))\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (props.value === null || secrets === undefined) return\r\n\r\n    if (props.value.status !== 'ready') return\r\n\r\n    const {signingKeyId, signingKeyPrivate} = secrets\r\n    const playbackId = props.value.playbackIds[0]\r\n\r\n    setPosterSrc(\r\n      getPosterSrc(playbackId.id, {\r\n        time: props.value.thumbTime,\r\n        fitMode: 'crop',\r\n        width: 640,\r\n        height: 360,\r\n        isSigned: playbackId.policy === 'signed',\r\n        signingKeyId,\r\n        signingKeyPrivate,\r\n      })\r\n    )\r\n  }, [props.value, secrets])\r\n\r\n  if (!props.value) return null\r\n\r\n  if (posterSrc !== undefined) {\r\n    return <div className={styles.poster} style={{backgroundImage: `url(${posterSrc})`}} />\r\n  }\r\n\r\n  const {filename, playbackId, status} = props.value\r\n\r\n  return (\r\n    <SanityDefaultPreview\r\n      title={filename || playbackId || ''}\r\n      subtitle={status ? `status: ${status}` : null}\r\n    />\r\n  )\r\n}\r\n\r\nMuxVideoPreview.propTypes = {\r\n  value: PropTypes.object,\r\n}\r\n\r\nMuxVideoPreview.defaultProps = {\r\n  value: null,\r\n}\r\n\r\nexport default MuxVideoPreview\r\n"],"file":"Preview.js"}